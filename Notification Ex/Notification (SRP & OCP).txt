using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Remoting.Messaging;
using System.Text;
using System.Threading.Tasks;

namespace SingleResponsibilityPrinciple_SRP
{

    /*
		Single Responsibility principle: A Class should have one and only one reason to change

		Divide the notification class to sub class each one of them do only one process

		the goals:
			1- Easy to test
			2- Save deploy time by making each one of these classes writing be one developer in same time
			3- This code easy to edit
	*/
    public class Notification
    {
        //This class becomes closed for modifications


        //public enum enMode { SMSNotification, FaxNotification, EmailNotification };

        private INotification _Notification;


        public Notification(INotification notification)
        {
            this._Notification = notification;
        }


        public void Send(string To, string Message)
        {
            _Notification.Send(To, Message);
            //if (Mode == enMode.SMSNotification)
            //{
            //    SendSMSService.Send(To, Message);
            //}
            //else if (Mode == enMode.FaxNotification)
            //{
            //    SendFaxService.Send(To, Message);
            //}
            //else if (Mode == enMode.EmailNotification)
            //{
            //    SendEmailService.Send(To, Message);
            //}
        }




    }
    public interface INotification
    {
        void Send(string To, string Message);
    }
    public class SendEmailService: INotification
    {
        public  void Send(string To, string Message)
        {
            //Code for send email
            Console.WriteLine($"\n\nEmail Sending to: {To},Contains: {Message}");
        }
    }

    public class SendSMSService : INotification
    {
        public  void Send(string To, string Message)
        {
            //Code for send SMS
            Console.WriteLine($"\n\nSMS Sending to: {To},Contains: {Message}");
        }
    }

    public class SendFaxService : INotification
    {
        public void Send(string To, string Message)
        {
            //Code for send FAX
            Console.WriteLine($"\n\nFax Sending to: {To},Contains: {Message}");
        }
    }


    internal class Program
    {
        static void Main(string[] args)
        {
            Notification notification = new Notification(new SendEmailService());


            //Sending Email 
            notification.Send("Ghayath", "This is new Email for test");



            //Sending SMS 
            notification = new Notification(new SendSMSService());
            notification.Send("+963 222 111 222", "This is new SMS message for test");



            //Sending Fax 
            notification = new Notification(new SendFaxService());
            notification.Send("+963 222 111 222", "This is new Fax for test");

            Console.ReadLine();
        }
    }
}
